make "f1 [[x] [
    make "g1 [[y] [return add :x :y]]
    return :g1
  ]
]
make "c1 f1 42
print c1 1

make "curry_two [[f x] [
  return [[y] [return f :x :y]]
]]
make "f2 [[x y] [
  return add :x :y
]]
make "f2p curry_two :f2 42
print f2p 233

make "fact_nicer [
    [rec]
    [
        make "g [
            [x]
            [
                if eq :x 0
                [return 1]
                [return mul :x rec sub :x 1]
            ]
        ]
        return :g
    ]
]
make "z_comb [
    [g]
    [
        make "t [
            [r]
            [
                make "y [
                    [yy]
                    [
                        make "tmp r :r
                        return tmp :yy
                    ]
                ]
                return g :y
            ]
        ]
        return t :t
    ]
]
make "fact_z z_comb :fact_nicer
print fact_z 5

make "0 [
    [f x]
    [return :x]
]

make "1 [
  [f x]
  [return f :x]
]

make "plus [
    [m n]
    [
        make "t [
            [f x]
            [
                make "tt n :f :x
                return m :f :tt
            ]
        ]
        return :t
    ]
]

make "one plus :0 :1
make "two plus :1 :1
make "three plus :one :two
make "p [
  [x]
  [print :x]
]
one :p "111
two :p "222
three :p "333